<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiao.programmer.dao.CourseLeaderMapper">
  <resultMap id="BaseResultMap" type="com.xiao.programmer.entity.CourseLeader">
    <id column="cId" jdbcType="VARCHAR" property="cid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="tId" jdbcType="VARCHAR" property="tid" />
    <result column="courseId" jdbcType="VARCHAR" property="courseid" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cId, name, gender, tId, courseId, email, introduce
  </sql>
  <select id="selectByExample" parameterType="com.xiao.programmer.entity.CourseLeaderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_leader
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_leader
    where cId = #{cid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from course_leader
    where cId = #{cid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiao.programmer.entity.CourseLeaderExample">
    delete from course_leader
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiao.programmer.entity.CourseLeader">
    insert into course_leader (cId, name, gender, 
      tId, courseId, email, 
      introduce)
    values (#{cid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{tid,jdbcType=VARCHAR}, #{courseid,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{introduce,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiao.programmer.entity.CourseLeader">
    insert into course_leader
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="tid != null">
        tId,
      </if>
      <if test="courseid != null">
        courseId,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiao.programmer.entity.CourseLeaderExample" resultType="java.lang.Long">
    select count(*) from course_leader
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course_leader
    <set>
      <if test="record.cid != null">
        cId = #{record.cid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.tid != null">
        tId = #{record.tid,jdbcType=VARCHAR},
      </if>
      <if test="record.courseid != null">
        courseId = #{record.courseid,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null">
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course_leader
    set cId = #{record.cid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      tId = #{record.tid,jdbcType=VARCHAR},
      courseId = #{record.courseid,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiao.programmer.entity.CourseLeader">
    update course_leader
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="tid != null">
        tId = #{tid,jdbcType=VARCHAR},
      </if>
      <if test="courseid != null">
        courseId = #{courseid,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
    </set>
    where cId = #{cid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiao.programmer.entity.CourseLeader">
    update course_leader
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      tId = #{tid,jdbcType=VARCHAR},
      courseId = #{courseid,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR}
    where cId = #{cid,jdbcType=VARCHAR}
  </update>

</mapper>